
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) && 
                       request.resource.data.role == resource.data.role &&
                       request.resource.data.email == resource.data.email;
      allow delete: if isOwner(userId);
    }

    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /updates/{updateId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
