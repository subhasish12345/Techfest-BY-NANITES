rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read and write their own data. Admins can read anyone's data.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Events are public to read, but only admins can modify them.
    match /events/{eventId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();

      // Rules for the 'registrations' sub-collection within each event
      match /registrations/{userId} {
        // Any authenticated user can create their own registration document.
        allow create: if request.auth != null && request.auth.uid == userId;
        // Only the user themselves or an admin can read the registration details.
        allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
        // No one can update or delete a registration from the client.
        allow update, delete: if false;
      }
    }

    // Live updates are public to read, but only admins can modify them.
    match /updates/{updateId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
  }
}
