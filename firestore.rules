rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      // Check if the user is authenticated and their role in the 'users' collection is 'admin'
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      // Anyone can read event details
      allow read: if true;
      
      // Only admins can create, update, or delete events
      allow create, update, delete: if isAdmin();

      // Rules for the 'registrations' subcollection within an event
      match /registrations/{userId} {
        // A logged-in user can only create a registration for themselves
        allow create: if isSignedIn() && isOwner(userId);
        
        // Only admins can read, update, or delete registration records
        allow read, update, delete: if isAdmin();
      }
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can create their own profile document
      allow create: if isOwner(userId);
      
      // Admins can read any user's profile, users can only read their own
      allow read: if isAdmin() || isOwner(userId);
      
      // Users can only update their own profile
      allow update: if isOwner(userId);
      
      // No one can delete user profiles directly through the client
      allow delete: if false;
    }
    
    // Rules for the 'updates' collection (live announcements)
    match /updates/{updateId} {
        // Anyone can read updates
        allow read: if true;
        
        // Only admins can create or delete updates
        allow create, delete: if isAdmin();
        
        // Updates cannot be edited, only created and deleted
        allow update: if false;
    }
  }
}
