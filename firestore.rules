
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      allow read; // Anyone can read event details
      allow write: if isAdmin(); // Only admins can create, update, delete events

      // Rules for event registrations sub-collection
      match /registrations/{userId} {
        allow read: if isAdmin() || request.auth.uid == userId; // Admins or the user themselves can read registration
        allow create: if request.auth.uid == userId; // Any authenticated user can register themselves for an event.
        allow update, delete: if isAdmin(); // Only admins can modify or delete registrations
      }
    }

    // Rules for the 'users' collection
    match /users/{userId} {
        // Read: A user can read their own profile. Admins can list all users.
        allow get: if request.auth.uid == userId;
        allow list: if isAdmin();
        
        // Create: Anyone can create their own user profile document upon signup.
        allow create: if request.auth.uid == userId;
        
        // Update: A user can update their own profile, but cannot change their role or email.
        allow update: if request.auth.uid == userId 
                      && request.resource.data.role == resource.data.role
                      && request.resource.data.email == resource.data.email;
                      
        // Delete: Only admins can delete user accounts
        allow delete: if isAdmin();
    }

    // Rules for the 'updates' collection
    match /updates/{updateId} {
        allow read; // Anyone can read live updates
        allow write: if isAdmin(); // Only admins can post or delete updates
    }
  }
}
