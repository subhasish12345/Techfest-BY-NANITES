
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for user profiles
    match /users/{userId} {
      // Admins can read any user profile.
      // A regular user can only read their own profile.
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // A user can only write to their own profile.
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for events
    match /events/{eventId} {
      // Anyone, including unauthenticated users, can read event details.
      allow read: if true;
      
      // Only admins can create, update, or delete events.
      allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Rules for the 'registrations' subcollection within an event
      match /registrations/{userId} {
        // Any authenticated user can read registrations (e.g., for admin panel).
        // Admins can read all registrations. A user can read their own.
        allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

        // An authenticated user can create their own registration document.
        // The document ID must match their own user ID.
        allow create: if request.auth != null && request.auth.uid == userId;
        
        // A user can delete their own registration, or an admin can delete any registration.
        allow delete: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      }
    }
    
    // Rules for live updates
    match /updates/{updateId} {
        // Anyone can read live updates.
        allow read: if true;
        
        // Only admins can create or delete updates.
        allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
