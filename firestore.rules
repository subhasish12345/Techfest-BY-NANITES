
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/write their own data. Admins can read anyone's data.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if isAdmin(); // Only admins can delete users
    }

    // Anyone can read events, but only admins can create, update, or delete them.
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();

      // Rules for the registrations subcollection
      match /registrations/{userId} {
        allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
        allow create: if request.auth != null && request.auth.uid == userId;
        allow delete: if isAdmin(); // Only admins can manage registrations
      }
    }

    // Anyone can read updates, but only admins can create or delete them.
    match /updates/{updateId} {
      allow read: if true;
      allow create, delete: if isAdmin();
    }
  }
}
