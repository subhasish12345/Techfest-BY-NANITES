rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Correctly access custom claims via request.auth.token.claims
      return request.auth != null && request.auth.token.claims.role == 'admin';
    }

    // USERS COLLECTION
    // Users can only read their own data.
    // Only admins can read all user data.
    // Creating a user is handled by auth triggers, not direct writes.
    // Updates should be handled by secure backend functions.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // EVENTS COLLECTION
    // Publicly readable, but only admins can modify.
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // UPDATES COLLECTION
    // Publicly readable for the live feed.
    // Only admins can create or delete announcements.
    match /updates/{updateId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
